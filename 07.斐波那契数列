题目描述
大家都知道斐波那契数列，现在要求输入一个整数n，请你输出斐波那契数列的第n项（从0开始，第0项为0，第1项是1）。
n<=39

思路1：递归
1.找极端情况：n==0/,n==1/2。
2.调用递归。
解法1：
public class Solution {
    public int Fibonacci(int n) {
        if(n==0){
            return 0;
        }else if(n>2){
            return Fibonacci(n-1)+Fibonacci(n-2);
        }else{
            return 1;
        }
    }
}
★思路2(动态规划)：
递归有很多重复计算，浪费性能。
状态定义：元素值代表斐波那契数列的值
转移方程：dp[i + 1] = dp[i] + dp[i - 1]d 
初始状态：dp[0]=1, dp[1] = 1
返回值：斐波那契数列的第n个数。

解法2：
public class Solution {
    public int Fibonacci(int n) {
        int sum;
        int fib_1 = 0;
        int fib_2 = 1;
        for(int i = 0; i < n; i++){
            sum = (fib_1 + fib_2);
            fib_1 = fib_2;
            fib_2 = sum;
        }
        return fib_1;
    }
}



